version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8085:8080"

  postgres-user:
    image: postgres:14
    container_name: postgres-user
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:14
    container_name: postgres-order
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    depends_on:
      - postgres-user
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "9090:9090"

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    depends_on:
      - postgres-order
      - user-service
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/order_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8083:8083"

volumes:
  postgres-user-data:
  postgres-order-data:
